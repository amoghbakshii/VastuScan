<% layout('layouts/boilerplate') %>

<style>
  :root {
    --primary-color: #06202B;
    --secondary-color: #f5eedd;
    --accent-color: #3b6b82; /* A slightly brighter accent */
    --text-primary: #333;
    --text-secondary: #666;
    --card-bg: #ffffff;
    --shadow-light: rgba(6, 32, 43, 0.08);
    --shadow-medium: rgba(6, 32, 43, 0.12);
    --border-radius-md: 12px;
    --border-radius-lg: 30px;
  }

  .explore-container {
    max-width: 1300px;
    margin: 50px auto;
    padding: 0 25px;
  }

  .explore-header {
    text-align: center;
    margin-bottom: 40px;
  }

  .explore-header h1 {
    font-family: 'DM Serif Display', serif;
    font-size: 40px;
    color: var(--primary-color);
    margin-bottom: 12px;
  }

  .explore-header p {
      font-size: 18px;
      color: var(--text-secondary);
      max-width: 600px;
      margin: 0 auto 30px;
  }

  .filter-controls {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
  }

  .search-wrapper {
    position: relative;
    width: 100%;
    max-width: 500px;
  }

  .search-icon {
      position: absolute;
      top: 50%;
      left: 18px;
      transform: translateY(-50%);
      color: var(--text-secondary);
      font-size: 16px;
      pointer-events: none;
  }

  .filter-input {
    width: 100%;
    padding: 12px 20px 12px 45px;
    border: 2px solid #e0e0e0;
    border-radius: var(--border-radius-lg);
    font-size: 16px;
    transition: all 0.3s ease;
  }

  .filter-input:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 8px 1px #d1e0e8;
  }

  .button-filters {
    display: flex;
    justify-content: center;
    gap: 10px;
    flex-wrap: wrap;
  }

  .filter-btn {
    padding: 9px 20px;
    background-color: #f7f7f7;
    color: #555;
    border: 1px solid #ddd;
    border-radius: var(--border-radius-lg);
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .filter-btn:hover {
    background-color: var(--secondary-color);
    border-color: var(--accent-color);
    color: var(--primary-color);
  }

  .filter-btn.active {
    background-color: var(--primary-color);
    color: var(--secondary-color);
    border-color: var(--primary-color);
    pointer-events: none;
  }

  /* --- CHANGE: Switched to a responsive grid layout --- */
  .business-list {
    display: grid;
    /* This creates a responsive grid. It will be 1 column on small screens, 
       and 2 or more columns on larger screens. */
    grid-template-columns: repeat(auto-fill, minmax(450px, 1fr));
    gap: 25px;
    margin-top: 50px;
  }

  .business-card {
    display: flex;
    flex-direction: column;
    background-color: var(--card-bg);
    border-radius: var(--border-radius-md);
    box-shadow: 0 2px 8px var(--shadow-light);
    border: 1px solid #e9e9e9;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    padding: 20px; /* Reduced padding */
  }

  .business-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 16px var(--shadow-medium);
  }

  .business-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 12px;
      gap: 15px;
  }
  
  .business-info h2 { /* Targeting the title directly */
    font-size: 20px; /* Reduced font size */
    font-weight: 700;
    color: var(--primary-color);
    margin-bottom: 4px;
  }

  .business-info .business-subtitle {
    font-size: 14px;
    color: var(--text-secondary);
    display: flex;
    align-items: center;
  }

  .business-subtitle .icon {
      margin-right: 6px;
  }

  .business-description {
    font-size: 14px;
    color: var(--text-primary);
    line-height: 1.6;
    margin-bottom: 15px;
    flex-grow: 1; /* Allows description to take available space */
  }

  .service-type-tag {
    background-color: #f0f5f8;
    color: var(--accent-color);
    padding: 5px 10px;
    border-radius: 6px;
    font-size: 12px;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    flex-shrink: 0;
  }

  .business-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: auto;
      padding-top: 15px;
      border-top: 1px solid #f0f0f0;
      gap: 15px;
  }

  /* --- CHANGE: Styles for blurred phone number --- */
  .contact-info {
    font-size: 14px;
    font-weight: 500;
    color: var(--text-secondary);
    cursor: pointer;
  }

  .contact-info .icon {
    margin-right: 5px;
  }

  .blurred-text {
    filter: blur(4px);
    transition: filter 0.3s ease;
  }

  /* --- CHANGE: Style for new appointment button --- */
  .appointment-btn {
    background-color: var(--primary-color);
    color: var(--secondary-color);
    padding: 10px 18px;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 600;
    font-size: 14px;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
  }
  
  .appointment-btn .icon {
    margin-right: 8px;
  }

  .appointment-btn:hover {
    background-color: var(--accent-color);
    color: var(--primary-color);
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(0,0,0,0.1);
  }

  .no-results {
      text-align: center;
      padding: 50px 20px;
      font-size: 18px;
      color: var(--text-secondary);
      display: none;
      grid-column: 1 / -1; 
  }

  /* ---------------- Animations ------------------- */
  @keyframes fadeSlideUp {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }

  .explore-header {
    animation: fadeSlideUp 0.6s ease forwards;
  }

  .business-card {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeSlideUp 0.6s ease forwards;
    animation-delay: var(--animation-delay, 0s);
  }

  /* Search field focus animation */
  .filter-input {
    transition: all 0.3s ease, box-shadow 0.4s ease;
  }

  .filter-btn {
    transition: all 0.25s ease, transform 0.2s ease;
  }

  .filter-btn:hover {
    transform: scale(1.05);
  }

  .appointment-btn {
    transition: all 0.3s ease, transform 0.2s ease;
  }

  .appointment-btn:hover {
    transform: scale(1.05) translateY(-2px);
  }

  .business-list .business-card {
    will-change: transform, opacity;
  }


</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="explore-container">
  <div class="explore-header">
    <h1>Find your Vastu Expert on VastuScan</h1>
    <p>Search by name, location, or filter by specialty to connect with the perfect professional for your needs.</p>
    <div class="filter-controls">
      <div class="search-wrapper">
          <i class="fas fa-search search-icon"></i>
          <input type="text" class="filter-input" id="globalSearch" placeholder="Search by name or address...">
      </div>
      <div class="button-filters">
        <button class="filter-btn active" data-filter="all">All</button>
        <button class="filter-btn" data-filter="vastu consultant">Vastu Consultant</button>
        <button class="filter-btn" data-filter="interior designer">Interior Designer</button>
        <button class="filter-btn" data-filter="architect">Architect</button>
        <button class="filter-btn" data-filter="astrologer">Astrologer</button>
      </div>
    </div>
  </div>

  <div class="business-list" id="businessGrid">
    <% if(businesses.length > 0) { %>
      <% businesses.forEach(business => { %>
        <div class="business-card"
             data-name="<%= (business.name || '').toLowerCase() %>"
             data-location="<%= (business.address || '').toLowerCase() %>"
             data-servicetype="<%= (business.serviceType || '').toLowerCase() %>">
          
          <div class="business-header">
            <div class="business-info">
                 <h2 class="business-title"><%= business.name || 'Name Not Available' %></h2>
                 <div class="business-subtitle">
                    <i class="fas fa-map-marker-alt icon"></i>
                    <%= business.address || 'Address Not Available' %>
                 </div>
            </div>
            <% if (business.serviceType) { %>
             <div class="service-type-tag"><%= business.serviceType %></div>
            <% } %>
          </div>
          
          <p class="business-description"><%= business.description || 'No description provided.' %></p>
          
          <div class="business-footer">
            <div class="contact-info" title="Hover to reveal number">
              <i class="fa-solid fa-phone"></i>
              <span class="blurred-text" style="user-select: none;"><%= business.contact %></span>
            </div>
            <a href="/appointment/book" class="appointment-btn">
                <i class="fas fa-calendar-check icon"></i>
                Book an Appointment
            </a>
          </div>
        </div>
      <% }) %>
    <% } %>
    <div class="no-results" id="noResultsMessage">
        <h3>No experts found</h3>
        <p>Try adjusting your search or filter criteria.</p>
    </div>
  </div>
</div>

<script>
  // The JavaScript logic remains the same as it correctly handles filtering.
  document.addEventListener('DOMContentLoaded', () => {
    const globalInput = document.getElementById('globalSearch');
    const businessGrid = document.getElementById('businessGrid');
    const cards = businessGrid.querySelectorAll('.business-card');
    const filterButtons = document.querySelectorAll('.filter-btn');
    const noResultsMessage = document.getElementById('noResultsMessage');
    
    let currentFilter = document.querySelector('.filter-btn.active')?.dataset.filter || 'all';

    function updateActiveButton(activeButton) {
        filterButtons.forEach(btn => btn.classList.remove('active'));
        if (activeButton) {
            activeButton.classList.add('active');
        }
    }

    function filterBusinesses() {
        const query = globalInput.value.toLowerCase().trim();
        let resultsFound = false;

        cards.forEach(card => {
            const name = card.dataset.name;
            const location = card.dataset.location;
            const serviceType = card.dataset.servicetype;

            const matchesSearch = name.includes(query) || location.includes(query);
            const matchesFilter = currentFilter === 'all' || serviceType === currentFilter;

            const isVisible = matchesSearch && matchesFilter;
            card.style.display = isVisible ? 'flex' : 'none';
            if (isVisible) resultsFound = true;
        });

        noResultsMessage.style.display = resultsFound ? 'none' : 'block';
    }

    globalInput.addEventListener('input', () => {
        const allBtn = document.querySelector('.filter-btn[data-filter="all"]');
        currentFilter = 'all';
        updateActiveButton(allBtn);
        filterBusinesses();
    });

    filterButtons.forEach(button => {
        button.addEventListener('click', (e) => {
            globalInput.value = '';
            const clickedButton = e.currentTarget;
            currentFilter = clickedButton.dataset.filter;
            updateActiveButton(clickedButton);
            filterBusinesses();
        });
    });
    
    filterBusinesses();
  });

  
cards.forEach((card, i) => {
  card.style.setProperty('--animation-delay', `${i * 0.1}s`);
});

</script>